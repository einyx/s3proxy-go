rules:
  - id: hardcoded-secret-string
    patterns:
      - pattern-either:
          - pattern: |
              $KEY = "..."
          - pattern: |
              $KEY = '...'
      - metavariable-regex:
          metavariable: $KEY
          regex: (?i)(password|passwd|pwd|secret|api_key|apikey|token|auth)
      - metavariable-regex:
          metavariable: $X
          regex: ^(?!.*test|example|dummy|fake|mock).*
    message: Potential hardcoded secret found
    languages: [go]
    severity: ERROR

  - id: sql-injection
    patterns:
      - pattern-either:
          - pattern: |
              db.Query($QUERY + $INPUT)
          - pattern: |
              db.Exec($QUERY + $INPUT)
          - pattern: |
              fmt.Sprintf($QUERY, $INPUT)
    message: Potential SQL injection vulnerability
    languages: [go]
    severity: ERROR

  - id: command-injection
    patterns:
      - pattern-either:
          - pattern: |
              exec.Command($CMD + $INPUT)
          - pattern: |
              exec.CommandContext(..., $CMD + $INPUT)
    message: Potential command injection vulnerability
    languages: [go]
    severity: ERROR

  - id: insecure-random
    patterns:
      - pattern: math/rand.$FUNC(...)
      - pattern-not-inside: |
          func init() {
            ...
          }
    message: Use crypto/rand for security-sensitive randomness
    languages: [go]
    severity: WARNING

  - id: unhandled-error
    patterns:
      - pattern: $X, _ := $FUNC(...)
      - pattern-not: $X, _ := fmt.$PRINT(...)
    message: Error not handled
    languages: [go]
    severity: WARNING

  - id: path-traversal
    patterns:
      - pattern-either:
          - pattern: filepath.Join($BASE, $INPUT)
          - pattern: path.Join($BASE, $INPUT)
      - pattern-not: |
          filepath.Clean(filepath.Join($BASE, $INPUT))
    message: Potential path traversal vulnerability
    languages: [go]
    severity: ERROR

  - id: weak-crypto
    patterns:
      - pattern-either:
          - pattern: md5.New()
          - pattern: sha1.New()
          - pattern: des.NewCipher(...)
    message: Weak cryptographic algorithm
    languages: [go]
    severity: WARNING

  - id: tls-skip-verify
    patterns:
      - pattern: |
          &tls.Config{
            ...,
            InsecureSkipVerify: true,
            ...
          }
    message: TLS certificate verification disabled
    languages: [go]
    severity: ERROR