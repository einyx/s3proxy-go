services:
  s3proxy:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: s3proxy-kms
    ports:
      - "8082:8080"
    environment:
      # Storage configuration
      - STORAGE_PROVIDER=s3
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_REGION=us-east-1
      - S3_USE_PATH_STYLE=true

      # Auth configuration
      - AUTH_TYPE=basic
      - AUTH_IDENTITY=admin
      - AUTH_CREDENTIAL=secret

      # Encryption configuration
      - ENCRYPTION_ENABLED=true
      - ENCRYPTION_KEY_PROVIDER=aws-kms
      - KMS_ENABLED=true
      - KMS_DEFAULT_KEY_ID=${KMS_KEY_ID:-alias/s3proxy-dev}
      - KMS_REGION=${AWS_REGION:-us-east-1}
      - KMS_VALIDATE_KEYS=true

      # AWS credentials from dev profile
      - AWS_PROFILE=dev

      # Logging
      - LOG_LEVEL=debug
      - LOG_FORMAT=json
    volumes:
      # Mount AWS credentials to use dev profile
      - ~/.aws:/root/.aws:ro
      # Mount config file if you prefer file-based config
      - ./examples/config-kms-docker.yaml:/etc/s3proxy/config.yaml:ro
    depends_on:
      - minio
    networks:
      - s3proxy-net
    command: ["--listen", "0.0.0.0:8080", "--log-level", "debug"]

  minio:
    image: minio/minio:latest
    container_name: s3proxy-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - s3proxy-net

  # Optional: LocalStack for testing KMS without real AWS
  localstack:
    image: localstack/localstack:latest
    container_name: s3proxy-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=kms,s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - LAMBDA_EXECUTOR=local
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - localstack_data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - s3proxy-net
    profiles:
      - localstack

  # Create KMS keys in LocalStack
  localstack-setup:
    image: amazon/aws-cli:latest
    container_name: s3proxy-localstack-setup
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: /bin/sh -c
    command: |
      "
      echo 'Waiting for LocalStack to be ready...'
      sleep 10

      echo 'Creating KMS key...'
      aws --endpoint-url=http://localstack:4566 kms create-key \
        --description 'S3Proxy Development Key' \
        --key-usage ENCRYPT_DECRYPT \
        --origin AWS_KMS

      echo 'Creating key alias...'
      aws --endpoint-url=http://localstack:4566 kms create-alias \
        --alias-name alias/s3proxy-dev \
        --target-key-id $$(aws --endpoint-url=http://localstack:4566 kms list-keys --query 'Keys[0].KeyId' --output text)

      echo 'KMS setup complete!'
      "
    networks:
      - s3proxy-net
    profiles:
      - localstack

volumes:
  minio_data:
    driver: local
  localstack_data:
    driver: local

networks:
  s3proxy-net:
    driver: bridge
