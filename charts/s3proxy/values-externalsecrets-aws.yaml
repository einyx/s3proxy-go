# Example values for S3Proxy with ExternalSecrets for AWS S3
# This example assumes you're using Vault as your secret backend

# Storage provider configuration
config:
  storage:
    provider: "s3"
    s3:
      # Non-sensitive configuration
      endpoint: "https://s3.amazonaws.com"
      region: "us-east-1"
      usePathStyle: false
      disableSSL: false
      # Credentials will come from ExternalSecrets
      accessKey: ""  # Will be overridden by ExternalSecret
      secretKey: ""  # Will be overridden by ExternalSecret

  # Authentication for S3Proxy API
  auth:
    type: "awsv4"
    # Credentials will come from ExternalSecrets
    identity: ""     # Will be overridden by ExternalSecret
    credential: ""   # Will be overridden by ExternalSecret

# ExternalSecrets configuration
externalSecrets:
  enabled: true
  
  # Specify your secret store
  secretStore:
    name: "vault-backend"  # Your SecretStore name
    kind: "SecretStore"    # or "ClusterSecretStore"
  
  # AWS S3 storage credentials
  aws:
    enabled: true
    # Configure the paths to your secrets in Vault (or other backend)
    remoteRefs:
      accessKeyId:
        key: "secret/data/aws/s3"  # Vault path
        property: "access_key_id"   # JSON property in secret
      secretAccessKey:
        key: "secret/data/aws/s3"
        property: "secret_access_key"
    
  # S3Proxy authentication credentials
  auth:
    enabled: true
    remoteRefs:
      identity:
        key: "secret/data/s3proxy/auth"
        property: "access_key"
      credential:
        key: "secret/data/s3proxy/auth"
        property: "secret_key"

# Example with Azure Key Vault instead of Vault
# externalSecrets:
#   enabled: true
#   secretStore:
#     name: "azure-key-vault"
#     kind: "SecretStore"
#   
#   aws:
#     enabled: true
#     remoteRefs:
#       accessKeyId:
#         key: "aws-s3-access-key-id"      # Secret name in AKV
#       secretAccessKey:
#         key: "aws-s3-secret-access-key"  # Secret name in AKV

# Example with AWS Secrets Manager
# externalSecrets:
#   enabled: true
#   secretStore:
#     name: "aws-secrets-manager"
#     kind: "SecretStore"
#   
#   aws:
#     enabled: true
#     remoteRefs:
#       accessKeyId:
#         key: "s3-credentials"
#         property: "accessKeyId"
#       secretAccessKey:
#         key: "s3-credentials"
#         property: "secretAccessKey"

# Rest of standard configuration
service:
  type: ClusterIP
  port: 9000

resources:
  requests:
    cpu: 500m
    memory: 512Mi
  limits:
    cpu: 2000m
    memory: 2Gi

# Enable if you want fast AWS signature validation
awsCredentials:
  enabled: true
  # These will use the same credentials from ExternalSecrets
  existingSecret: "s3proxy-aws-credentials"