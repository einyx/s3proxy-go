---
apiVersion: v1
kind: ConfigMap
metadata:
  name: s3proxy-config
  namespace: dev
data:
  config.yaml: |
    server:
      listen: ":8080"
      log_level: "debug"

    # Client authentication - use AWS V4 signature with minio/minio123
    auth:
      type: "awsv4"
      identity: "${AUTH_IDENTITY}"
      credential: "${AUTH_CREDENTIAL}"

    storage:
      provider: "s3"
      s3:
        region: me-central-1
        use_path_style: false
        bucket_configs:
          warehouse:
            real_name: dev-terraform-managed-bucket
            region: me-central-1
            prefix: warehouse/
          samples:
            real_name: dev-terraform-managed-bucket
            region: me-central-1
            prefix: samples/
          connectors:
            real_name: dev-terraform-managed-bucket
            region: me-central-1
            prefix: connectors/
          models:
            real_name: dev-terraform-managed-bucket
            region: me-central-1
            prefix: models/
          meltano-state:
            real_name: dev-terraform-managed-bucket
            region: me-central-1
            prefix: meltano-state/
          mlflow:
            real_name: dev-terraform-managed-bucket
            region: me-central-1
            prefix: mlflow/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3proxy
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: s3proxy
  template:
    metadata:
      labels:
        app: s3proxy
    spec:
      serviceAccountName: s3proxy  # Use the service account with S3 permissions
      containers:
      - name: s3proxy
        image: ${ECR_REGISTRY}/platform/s3proxy:debug
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        # Storage provider
        - name: STORAGE_PROVIDER
          value: "s3"
        # Let the config file handle region settings
        # Remove S3_REGION to avoid overriding config file
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        command: ["/s3proxy"]
        args: ["--config", "/config/config.yaml"]
      volumes:
      - name: config
        configMap:
          name: s3proxy-config

---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: dev
spec:
  selector:
    app: s3proxy
  ports:
  - port: 9000
    targetPort: 8080
    name: http
  - port: 80
    targetPort: 8080
    name: httpz
