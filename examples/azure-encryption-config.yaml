# S3Proxy Configuration for Azure Blob Storage with Encryption
# This example shows how to configure S3Proxy with Azure backend and encryption

server:
  listen: ":8080"
  log_level: "info"
  log_format: "json"
  enable_request_id: true
  enable_access_log: true
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "120s"
  max_header_bytes: 1048576

storage:
  provider: "azure"

  azure:
    # Azure Storage Account Name (required)
    account_name: "${AZURE_STORAGE_ACCOUNT}"

    # Azure Storage Account Key (required unless using SAS)
    account_key: "${AZURE_STORAGE_KEY}"

    # Container name to use
    container_name: "${AZURE_CONTAINER_NAME:s3proxy-data}"

    # Use SAS token instead of account key
    use_sas: false

    # SAS token (if use_sas is true)
    # sas_token: "${AZURE_SAS_TOKEN}"

    # Custom endpoint (optional, defaults to standard Azure endpoint)
    # endpoint: "https://myaccount.blob.core.windows.net"

    # Azure specific options
    max_retries: 3
    retry_delay: "1s"
    timeout: "30s"

# Encryption configuration
encryption:
  # Enable encryption for data at rest
  enabled: true

  # Encryption algorithm (currently only aes-gcm is supported)
  algorithm: "aes-gcm"

  # Key provider configuration
  key_provider: "${ENCRYPTION_KEY_PROVIDER:local}"

  # Local key provider (for development/testing)
  local:
    # Base64 encoded 32-byte master key
    # Generate with: openssl rand -base64 32
    master_key: "${ENCRYPTION_LOCAL_MASTER_KEY}"

  # AWS KMS key provider (for production)
  # kms:
  #   key_id: "${ENCRYPTION_KMS_KEY_ID}"
  #   region: "${AWS_REGION:us-east-1}"

  # Future: Azure Key Vault provider
  # azure_keyvault:
  #   vault_name: "${AZURE_KEY_VAULT_NAME}"
  #   key_name: "${AZURE_KEY_NAME}"
  #   key_version: "${AZURE_KEY_VERSION}"

# Authentication configuration
auth:
  # Authentication type: none, basic, awsv4
  type: "${AUTH_TYPE:awsv4}"

  # For basic auth
  # basic:
  #   username: "${AUTH_USERNAME}"
  #   password: "${AUTH_PASSWORD}"

  # For AWS Signature V4 auth (S3 compatible)
  identity: "${AUTH_IDENTITY:${S3PROXY_ACCESS_KEY}}"
  credential: "${AUTH_CREDENTIAL:${S3PROXY_SECRET_KEY}}"

# Performance configuration
cache:
  enabled: true
  size_mb: 100
  ttl: "5m"

# Rate limiting
rate_limit:
  enabled: false
  requests_per_second: 100
  burst: 200

# Metrics configuration
metrics:
  enabled: true
  path: "/metrics"

# Health check configuration
health:
  path: "/health"
  readiness_path: "/ready"

# TLS configuration (optional)
# tls:
#   enabled: false
#   cert_path: "/path/to/cert.pem"
#   key_path: "/path/to/key.pem"
#   min_version: "1.2"
